(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{549:function(n,s){n.exports={content:["article",["p","部分接口需要传入参数地区维度ID(spaceDimID)，本接口用于获取所有地区信息，从而拿到地区维度ID(spaceDimID)。"],["hr"],["h2","请求"],["ul",["li",["p","URL：",["a",{title:null,href:"https://jdy.cigdata.cn/api/regions"},"https://jdy.cigdata.cn/api/regions"]]],["li",["p","Method：POST"]],["li",["p","Header：\n  |  字段   |  类型   |  描述  |\n  | --- | --- | --- |\n  | Content-Type | string | 请求类型，允许值: application/json;charset=UTF-8 |\n  | APIVersion | int | API版本，允许值:3 |\n  | Access-Token | string | access_token |"]]],["h2","响应"],["p","请求成功接口将返回地区数据，data字段是数组类型，包含如下字段：\n|  字段   |  类型  |  描述  |\n| --- | --- | --- | \n| provinceID | int | 省份ID |\n| province | string | 省份 |\n| cityLevelID | int | 城市级别ID |\n| cityLevel | string| 城市级别 |\n| cityID | int | 城市ID |\n| city | string| 城市 |"],["p","JAVA代码请求示例："],["pre",{lang:null,highlighted:'import org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpEntity<span class="token comment" spellcheck="true">;</span>\nimport org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpHeaders<span class="token comment" spellcheck="true">;</span>\nimport org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>MediaType<span class="token comment" spellcheck="true">;</span>\nimport org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span>RestTemplate<span class="token comment" spellcheck="true">;</span>\n \npublic class OpenAPI {\n    public void <span class="token function">getRegions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>{\n        RestTemplate restTemplate <span class="token operator">=</span> new <span class="token function">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        String url <span class="token operator">=</span> <span class="token string">"https://jdy.cigdata.cn/api/regions"</span><span class="token comment" spellcheck="true">;</span>\n        String str <span class="token operator">=</span> <span class="token string">"{}"</span><span class="token comment" spellcheck="true">;</span>\n        HttpHeaders headers <span class="token operator">=</span> new <span class="token function">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"APIVersion"</span><span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"Access-Token"</span><span class="token punctuation">,</span> <span class="token string">"YourAccessToken"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        MediaType type <span class="token operator">=</span> MediaType<span class="token punctuation">.</span><span class="token function">parseMediaType</span><span class="token punctuation">(</span>"application<span class="token operator">/</span>json<span class="token comment" spellcheck="true">; charset=UTF-8");</span>\n        headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        HttpEntity request <span class="token operator">=</span> new <span class="token function">HttpEntity</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span>headers<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        String response <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> request<span class="token punctuation">,</span> String<span class="token punctuation">.</span>class<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n}'},["code",'import org.springframework.http.HttpEntity;\nimport org.springframework.http.HttpHeaders;\nimport org.springframework.http.MediaType;\nimport org.springframework.web.client.RestTemplate;\n \npublic class OpenAPI {\n    public void getRegions(){\n        RestTemplate restTemplate = new RestTemplate();\n        String url = "https://jdy.cigdata.cn/api/regions";\n        String str = "{}";\n        HttpHeaders headers = new HttpHeaders();\n        headers.set("APIVersion", "3");\n        headers.set("Access-Token", "YourAccessToken");\n        MediaType type = MediaType.parseMediaType("application/json; charset=UTF-8");\n        headers.setContentType(type);\n        HttpEntity request = new HttpEntity(str,headers);\n        String response = restTemplate.postForObject(url, request, String.class);\n        System.out.println(response);\n    }\n}']],["p","返回数据结果示例如下："],["pre",{lang:null,highlighted:'{\n\t<span class="token string">"code"</span><span class="token punctuation">:</span> <span class="token string">"20000"</span><span class="token punctuation">,</span>\n\t<span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"数据返回正确"</span><span class="token punctuation">,</span>\n\t<span class="token string">"data"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n\t\t\t<span class="token string">"provinceID"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">"province"</span><span class="token punctuation">:</span> <span class="token string">"安徽"</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">"cityID"</span><span class="token punctuation">:</span> <span class="token number">101</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">"city"</span><span class="token punctuation">:</span> <span class="token string">"合肥"</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">"cityLevelID"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">"cityLevel"</span><span class="token punctuation">:</span> <span class="token string">"二线城市"</span>\n\t\t}<span class="token punctuation">,</span> {\n\t\t\t<span class="token string">"provinceID"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">"province"</span><span class="token punctuation">:</span> <span class="token string">"安徽"</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">"cityID"</span><span class="token punctuation">:</span> <span class="token number">102</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">"city"</span><span class="token punctuation">:</span> <span class="token string">"安庆"</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">"cityLevelID"</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">"cityLevel"</span><span class="token punctuation">:</span> <span class="token string">"四线城市"</span>\n\t\t}<span class="token punctuation">,</span>\n\t\t<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n\t<span class="token punctuation">]</span>\n}'},["code",'{\n\t"code": "20000",\n\t"message": "数据返回正确",\n\t"data": [\n        {\n\t\t\t"provinceID": 1,\n\t\t\t"province": "安徽",\n\t\t\t"cityID": 101,\n\t\t\t"city": "合肥",\n\t\t\t"cityLevelID": 2,\n\t\t\t"cityLevel": "二线城市"\n\t\t}, {\n\t\t\t"provinceID": 1,\n\t\t\t"province": "安徽",\n\t\t\t"cityID": 102,\n\t\t\t"city": "安庆",\n\t\t\t"cityLevelID": 4,\n\t\t\t"cityLevel": "四线城市"\n\t\t},\n\t\t...\n\t]\n}']]],meta:{title:"地区维度字典",publishDate:"2021-12-12T00:00:00.000Z",filename:"api/字典接口/3-2.md"}}}}]);